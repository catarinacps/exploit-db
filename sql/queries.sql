-- Script containing the demanded queries for the assignment.
--
-- Authors:
-- Henrique Corrêa Pereira da Silva
-- Felipe Colombelli


-- Todos os exploits explorados por um dado usuário (nesse exemplo, mutano) numa
-- dada plataforma (nesse exemplo, Windows)
    select *
    from ENVIAVEL env natural join VERIFICAVEL verif join EXPLOIT ex using (codv)
    where env.usuario = 'mutano' and env.tipoe = 'Exploit' and verif.plat='Windows';


-- Todos os dados de vazamentos associados a um dado usuário do ExploitDB, assim
-- como quais dados pessoais foram vazados.
    select d.email, v.site, v.datav, d.fone, d.senha, d.endr
    from USUARIO join DADOS d using (email) join VAZAMENTO v on (d.vaz = v.codvaz);


-- Todos os dados de aplicativos associados a determinado CVE.
    select ex.cve, APP.nomeapp, APP.arqapp, APP.tamanho
    from APP join EXPLORACAO e on (APP.nomeapp = e.app) join EXPLOIT ex on (ex.codv = e.exploit)
    where ex.cve <> 'null';


-- Os verificadores que verificaram Shellcodes, ordenados pelo tamanho médio dos
-- shellcodes que eles verificaram.
    select vd.apelido, avg(tamanho) as tammed
    from VERIFICACAO vc
         join VERIFICADOR vd on (vc.verificador = vd.apelido)
         join VERIFICAVEL vv on (vv.codv = vc.codv)
         join SHELLCODE sc on (sc.codv = vv.codv)
    group by vd.apelido
    order by tammed;


-- Os dados de vazamentos dos e-mails que tiveram seus dados vazados nos mesmos
-- sites (e talvez outros) que um dado e-mail (nesse exemplo, arankar@gmail.com).
    select *
    from DADOS d join VAZAMENTO v on (v.codvaz = d.vaz)
    where d.email <> 'arankar@gmail.com' and NOT EXISTS (
        select *
        from DADOS d1 join VAZAMENTO v1 on (v1.codvaz = d1.vaz)
        where d1.email = 'arankar@gmail.com' and site not in (
            select distinct site
            from DADOS d2 join VAZAMENTO v2 on (v2.codvaz = d2.vaz)
            where d2.email = d.email
        )
    );


-- Os verificáveis que ainda não foram verificados e cuja plataforma é a que
-- possui o maior número de artigos associados.
    select codv
    from VERIFICAVEL vv
    where status = false and vv.plat in (
        select ar.plat, count(*) as quant
        from ARTIGO ar
        group by ar.plat
        order by quant
        fetch first 1 rows only
    );


-- Visão: Todos os enviáveis que não foram revisados ainda.
    create view NAO_REVISADOS as
    select *
    from enviavel
    where estado = false;

-- E que foram enviados antes de uma dada data (nesse exemplo, 2019-07-20)
    select *
    from NAO_REVISADOS
    where datap < '2019-07-20';
-- E que são exploits relacionados a um CVE
    select *
    from NAO_REVISADOS nr natural join VERIFICAVEL join EXPLOIT e using(codv)
    where cve <> 'null';

import tkinter as tk
from tkinter import ttk
from dbhandler import *


class GUI:

    windowWidth = 410
    windowHeight = 298
    windowTitle = "Exploit-DB"
    windowBackground = "white"
    windowResizable = True

    label1Text = "Escolha a busca desejada e informe os inputs necessários:"
    msgInput1Text = "Digite o nome do usuário"

    def __init__(self, connection):
        self.dbhandler = DBHandler(connection)
        self.rootFrame = tk.Tk()
        self.changeWindowConfigurations()
        self.initRootWindowElements()
        self.rootFrame.mainloop()

    def changeWindowConfigurations(self):

        # get user screen size
        screenWidth = self.rootFrame.winfo_screenwidth()
        screenHeight = self.rootFrame.winfo_screenheight()

        # coords for centralizing window
        xpos = (screenWidth/2) - (self.windowWidth/2)
        ypos = (screenHeight/2) - (self.windowHeight/2)

        # set window size and position
        self.rootFrame.geometry(
            "%dx%d+%d+%d" % (self.windowWidth, self.windowHeight, xpos, ypos))
        self.rootFrame.title(self.windowTitle)
        self.rootFrame.configure(background=self.windowBackground)
        self.rootFrame.resizable(
            width=self.windowResizable, height=self.windowResizable)

    def initRootWindowElements(self):

        # first text label
        tk.Label(self.rootFrame, text=self.label1Text, bg="white", fg="black",
                 font="none 10 bold") .grid(row=0, column=0, sticky="W", pady=(10, 10))

        # combobox
        self.selectDrop = ttk.Combobox(
            self.rootFrame, state="readonly")
        self.selectDrop.grid(row=1, column=0, columnspan=2, sticky="WE",
                             padx=4, pady=(0, 10))
        self.selectDrop['values'] = self.dbhandler.QUERIES
        self.selectDrop.current(newindex=0)
        self.selectDrop.bind("<<ComboboxSelected>>",
                             self.comboboxChanged)

        # message asking input
        self.msgInput = tk.Label(
            self.rootFrame, text=self.msgInput1Text, bg="white", fg="black", font="none 10")
        self.msgInput.grid(row=2, column=0, sticky="W", padx=4)

        # input text box
        self.inputParameter = tk.Entry(
            self.rootFrame, font="none 11", bg="white")
        self.inputParameter.grid(
            row=3, column=0, columnspan=2, sticky="WE", padx=4)

        # output box
        self.output = tk.Text(
            self.rootFrame, width=48, height=8, wrap="word")
        self.output.grid(row=4, column=0,
                         padx=(4, 0), pady=10, sticky="WE")
        self.output.insert("end", "")
        self.output.config(state="disabled")

        # output box scrollbar
        self.scrollb = tk.Scrollbar(
            self.rootFrame, command=self.output.yview)
        self.scrollb.grid(row=4, column=1,
                          pady=10, sticky="NSW")
        self.output['yscrollcommand'] = self.scrollb.set

        # go button
        tk.Button(self.rootFrame, text="BUSCA", width=5, command=self.handleQuery) .grid(
            row=5, column=0, columnspan=2, padx=(4, 4), sticky="EW")

    def handleQuery(self):

        query = self.selectDrop.current()
        inputParameter = self.inputParameter.get()
        self.dbhandler.crud(query, inputParameter)
        output = self.dbhandler.getQueryOutput()
        self.changeOutputBox(output)

    def changeOutputBox(self, text):
        self.output.config(state="normal")
        self.output.delete(0.0, "end")
        self.output.insert("end", text)
        self.output.config(state="disabled")

    def comboboxChanged(self, event):

        selection = self.selectDrop.current()

        if selection == 0:
            info = "Digite o nome do usuário"
            self.changeLabelInstructionText(info)

        if selection == 1:
            info = "Digite o nome do usuário"
            self.changeLabelInstructionText(info)
        
        if selection == 2:
            info = "Nenhum input necessário"
            self.changeLabelInstructionText(info)

        if selection == 3:
            info = "Digite o endereço de e-mail"
            self.changeLabelInstructionText(info)

        if selection == 4:
            info = "Digite a data no formato AAAA-MM-DD"
            self.changeLabelInstructionText(info)

        if selection == 5:
            info = "Nenhum input necessário"
            self.changeLabelInstructionText(info)


    def changeLabelInstructionText(self, textToChange):
        self.msgInput.config(text=textToChange)

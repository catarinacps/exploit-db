import psycopg2

class DBHandler:

    QUERIES = [

        "Todos os exploits explorados por # na plataforma Windows",
        "Todos os dados de vazamentos associados ao usuário # do Exploit-DB",
        "Todos os dados de aplicativos associados a determinado CVE",
        "Os dados de vazamentos dos e-mails que tiveram seus dados vazados nos mesmos sites (e talvez outros) que o e-mail #",
        "Enviáveis não revisados, enviados antes de #",
        "Enviáveis não revisados, que são exploits relacionados a um CVE"

    ]

    queryOutput = ""



    SQL_QUERIES = [
    "select *" +
    "from ENVIAVEL env natural join VERIFICAVEL verif join EXPLOIT ex using (codv)" +
    "where env.usuario = %(input) and env.tipoe = 'Exploit' and verif.plat='Windows';"
    
    ]


    def __init__(self, connection):
        self.connection = connection
        self.cursor = connection.cursor()

    def getQueryOutput(self):
        return self.queryOutput

    def crud(self, query, inputText):
        print(self.SQL_QUERIES[query])
        try:
            self.cursor.execute(self.SQL_QUERIES[query], {'input': inputText})
            rows = self.cursor.fetchall()
            self.queryOutput = rows    

        except (Exception, psycopg2.DatabaseError) as error:
            self.queryOutput = "Error while reading PostgreSQL table" + error

    
